// 构建脚本，最先运行，必须放在 plugins 前面
buildscript {
    print("hello lan")

    ext {
        lanVersion = '0.0.1'
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        jcenter()
    }

}

// 所有项目共享配置
allprojects {
    apply plugin: "java"

    group = 'lan'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    // 字符编码
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    sourceSets {
        main {
            resources {
                //可以将java目录下的所有非.java资源打包到classes下
                srcDir "src/main/java"
            }
        }
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/apache-snapshots'
        }
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    // 使用 JUnit 单元测试
    test {
        useJUnitPlatform()
    }
}

subprojects {

}

dependencies {
    // log
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.31'

    // java.annotation 注解
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // hutool 工具类
    implementation 'cn.hutool:hutool-all:5.5.4'

    // truffle 语言框架
    implementation group: 'org.graalvm.truffle', name: 'truffle-api', version: '21.0.0.2'
    implementation group: 'org.graalvm.truffle', name: 'truffle-dsl-processor', version: '21.0.0.2'

    // junit 前面需要 useJUnitPlatform()
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'


    // gradle 集成 lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
}
